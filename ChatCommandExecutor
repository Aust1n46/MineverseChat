package mineverse.Aust1n46.chat.command;

import java.io.FileNotFoundException;
import java.util.List;
import java.util.logging.Logger;
import mineverse.Aust1n46.chat.ChatChannel;
import mineverse.Aust1n46.chat.ChatChannelInfo;
import mineverse.Aust1n46.chat.MineverseChat;
import org.bukkit.Bukkit;
import org.bukkit.ChatColor;
import org.bukkit.Location;
import org.bukkit.command.Command;
import org.bukkit.command.CommandExecutor;
import org.bukkit.command.CommandSender;
import org.bukkit.configuration.ConfigurationSection;
import org.bukkit.entity.Player;
import org.bukkit.event.EventHandler;
import org.bukkit.event.Listener;
import org.bukkit.event.player.PlayerCommandPreprocessEvent;
import org.bukkit.metadata.FixedMetadataValue;
import org.bukkit.plugin.Plugin;
import org.bukkit.plugin.PluginManager;
import com.massivecraft.factions.entity.UPlayer;
import com.palmergames.bukkit.towny.object.Resident;
import com.palmergames.bukkit.towny.object.TownyUniverse;

public class ChatCommandExecutor implements CommandExecutor, Listener {
	
	private MineverseChat plugin;
    @SuppressWarnings("unused")
    private String name;
    private ChatChannelInfo cc;
    private static final Logger log = Logger.getLogger("Minecraft");

    public enum Mineverse {
        channel,
        leave
    }

    public ChatCommandExecutor(MineverseChat _plugin, ChatChannelInfo chatchannel) {
        plugin = _plugin;
        name = plugin.getName();
        cc = chatchannel;
    }
    
    @EventHandler
    public void onPlayerCommandPreprocess(PlayerCommandPreprocessEvent e) throws FileNotFoundException {  	
    	ConfigurationSection cs = plugin.getConfig().getConfigurationSection("commandspy");
    	Boolean wec = cs.getBoolean("worldeditcommands", true);
    	Player pl[] = plugin.getServer().getOnlinePlayers();
        for(Player p : pl) {
        	if(plugin.getMetadata(p, "MineverseChat.commandspy", plugin) == true) {	
        		if(wec == true) {        		
        			p.sendMessage(ChatColor.GOLD + e.getPlayer().getDisplayName() + ": " + e.getMessage());
         		}
        		else {
        			if(!(e.getMessage().toLowerCase().startsWith("//"))) {
        				p.sendMessage(ChatColor.GOLD + e.getPlayer().getDisplayName() + ": " + e.getMessage());
        			}
        		}
         	}
 		}
    	
    	Player player = e.getPlayer();
    	  
    	if(!e.getMessage().startsWith("/afk")) {
    		if(plugin.getMetadata(player, "MineverseChat.afk", plugin)) {
    			player.setMetadata("MineverseChat.afk", new FixedMetadataValue(plugin,false));
    			player.sendMessage(ChatColor.GOLD + "You are no longer AFK.");
    			Player pla[] = plugin.getServer().getOnlinePlayers();
    			if(plugin.getConfig().getBoolean("broadcastafk")) {
    				for (Player p : pla) {
    					if(player.getDisplayName() != p.getDisplayName()) {
    						p.sendMessage(ChatColor.GOLD + p.getDisplayName() + " is no longer AFK.");
    					}
    				}
    			}
    		}
    	}
    	
    	String[] blocked = e.getMessage().split(" ");
    	if(plugin.getMetadata(player,"MineverseChat.commandblock."+blocked[0],plugin)) {
    		player.sendMessage(ChatColor.RED+"You are blocked from entering this command: "+e.getMessage());
    		e.setCancelled(true);
    	}
    	
    	String message = e.getMessage();
    	boolean cus = false;
    	if(message.startsWith("/pl") || message.startsWith("/plugins")) {
    		if(message.contains(" ")) {
    			if(message.split(" ")[0].equals("/pl") || message.split(" ")[0].equals("/plugins")) {
    				cus = true;
    			}
    		}
    		if(message.equals("/pl") || message.equals("/plugins")) {
    			cus = true;
    		}
    		if(cus && player.hasPermission("bukkit.command.plugins")) {
    			String pluginlist = "";
    			for(Plugin p : Bukkit.getPluginManager().getPlugins()) {
    				pluginlist += ChatColor.GREEN + p.getName().replace("MineverseChat", plugin.getConfig().getString("pluginname", "MineverseChat")) + ChatColor.WHITE + ", ";     				
    			}
    			if(pluginlist.length() > 2) {
    				pluginlist = pluginlist.substring(0, pluginlist.length() - 2);
    			}
    			player.sendMessage("Plugins (" + Bukkit.getPluginManager().getPlugins().length + "): " + pluginlist);
    			e.setCancelled(true);
    		}
    	}
    }
    
    @SuppressWarnings("unchecked")
	@Override
    public boolean onCommand(CommandSender sender, Command cmd, String label, String[] args) {
    	String comm = cmd.getName().toLowerCase();
    	if(!(sender instanceof Player) && !comm.equals("broadcast")) {
    		log.info(String.format("[" + String.format(plugin.getConfig().getString("pluginname", "MineverseChat") + "]" + " - This command must be run by a player!", plugin.getDescription().getName())));
    		return true;
    	}
    	Player player = null;
    	if(sender instanceof Player) {
    		player = (Player) sender;  
    	}
        
        if(args == null) {
            return false;
        }
        
        //String filecolon = "{colon}";
        //String colon = ":";
        //String filechannel = "{channel}";
        //String fileplayer = "{player}";
        //ConfigurationSection m = plugin.getConfig().getConfigurationSection("messages");
        //String npc = m.getString("nopermschannel", "§cYou do not have permission for this channel.").replace(filecolon, colon).replace(fileplayer, "[{player} invalid usage]");
        //String npcv = m.getString("nopermschannelview", "§cYou do not have permission to look at this channel.").replace(filecolon, colon).replace(fileplayer, "[{player} invalid usage]");
        //String npsc = m.getString("nopermscommandsetchannel", "§cYou do not have permission for this command.").replace(filecolon, colon).replace(fileplayer, "[{player} invalid usage]");
        //String npsca = m.getString("nopermscommandsetchannelall", "§cYou do not have permission for this command.").replace(filecolon, colon).replace(fileplayer, "[{player} invalid usage]");
        //String npkc = m.getString("nopermscommandkickchannel", "§cYou do not have permission for this command.").replace(filecolon, colon).replace(fileplayer, "[{player} invalid usage]");
        //String npkca = m.getString("nopermscommandkickchannelall", "§cYou do not have permission for this command.").replace(filecolon, colon).replace(fileplayer, "[{player} invalid usage]");
        //String npf = m.getString("nopermscommandforce", "§cYou do not have permission for this command.").replace(filecolon, colon).replace(fileplayer, "[{player} invalid usage]");
        //String npfa = m.getString("nopermscommandforceall", "§cYou do not have permission for this command.").replace(filecolon, colon).replace(fileplayer, "[{player} invalid usage]");
        //String npw = m.getString("nopermscommandchwho", "§cYou do not have permission for this command.").replace(filecolon, colon).replace(fileplayer, "[{player} invalid usage]");
        //String npcr = m.getString("nopermscommandchatreload", "§cYou do not have permission for this command.").replace(filecolon, colon).replace(fileplayer, "[{player} invalid usage]");
        //String npm = m.getString("nopermscommandmute", "§cYou do not have permission for this command.").replace(filecolon, colon).replace(fileplayer, "[{player} invalid usage]");
        //String npum = m.getString("nopermscommandunmute", "§cYou do not have permission for this command.").replace(filecolon, colon).replace(fileplayer, "[{player} invalid usage]");
        //String npma = m.getString("nopermscommandmuteall", "§cYou do not have permission for this command.").replace(filecolon, colon).replace(fileplayer, "[{player} invalid usage]");
        //String npuma = m.getString("nopermscommandunmuteall", "§cYou do not have permission for this command.").replace(filecolon, colon).replace(fileplayer, "[{player} invalid usage]");
        //String crm = m.getString("chatreloadmessage", "§6MineverseChat config reloaded.").replace(filecolon, colon).replace(fileplayer, "[{player} invalid usage]");
        //String cic = m.getString("channelinvalidcommand", "§cInvalid command: /channel [channelname]").replace(filecolon, colon).replace(fileplayer, "[{player} invalid usage]");
        //String cicn = m.getString("channelinvalidchannelname", "§cInvalid channelname: {channel}").replace(filecolon, colon).replace(fileplayer, "[{player} invalid usage]");
        //String licn = m.getString("listeninvalidchannelname", "§cInvalid channelname: {channel}").replace(filecolon, colon).replace(fileplayer, "[{player} invalid usage]");
        //String fic = m.getString("forceinvalidcommand", "§cInvalid command: /force [player] [msg]").replace(filecolon, colon).replace(fileplayer, "[{player} invalid usage]");
        //String faic = m.getString("forceallinvalidcommand", "§cInvalid command: /forceall [msg]").replace(filecolon, colon).replace(fileplayer, "[{player} invalid usage]");
        //String scic = m.getString("setchannelinvalidcommand", "§cInvalid command: /setchannel [player] [channelname]").replace(filecolon, colon).replace(fileplayer, "[{player} invalid usage]");
        //String scaic = m.getString("setchannelallinvalidcommand", "§cInvalid command: /setchannelall [player]").replace(filecolon, colon).replace(fileplayer, "[{player} invalid usage]");
        //String kcic = m.getString("kickchannelinvalidcommand", "§cInvalid command: /kickchannel [player] [channelname]").replace(filecolon, colon).replace(fileplayer, "[{player} invalid usage]");
        //String kcaic = m.getString("kickchannelallinvalidcommand", "§cInvalid command: /kickchannelall [player]").replace(filecolon, colon).replace(fileplayer, "[{player} invalid usage]");
        //String lic = m.getString("listeninvalidcommand", "§cInvalid command: /listen [channel]").replace(filecolon, colon).replace(fileplayer, "[{player} invalid usage]");
        //String jc = m.getString("joinchannel", "§fChannel Set: {channel}").replace(filecolon, colon).replace(fileplayer, "[{player} invalid usage]");
        //String lc = m.getString("listenchannel", "§fListening to Channel: {channel}").replace(filecolon, colon).replace(fileplayer, "[{player} invalid usage]");
        //String fip = m.getString("forceinvalidplayer", "§cCan't force, player: §6{player}§c doesn't exist.").replace(filecolon, colon);
        //String spt = m.getString("stopprivatetell", "§fYou are no longer in private conversation with {player}.").replace(filecolon, colon);
        //String scich = m.getString("setchannelinvalidchannel", "§cCan't setchannel, channel: §6{channel}§c doesn't exist.").replace(filecolon, colon);
        //String scip = m.getString("setchannelinvalidplayer", "§cCan't setchannel, player: §6{player}§c doesn't exist.").replace(filecolon, colon);
        
        for(ChatChannel ci : cc.getChannelsInfo()) {
        	if(comm.toLowerCase().equals(ci.getAlias())) {           		
        		if(args.length == 0) {
        			player.sendMessage(ChatColor.RED + "Invalid command: /" + ci.getAlias() + " message");
        			return true;
        		}
        		player.setMetadata("insertchannel",new FixedMetadataValue(plugin,ci.getName()));
                player.setMetadata("listenchannel." + ci.getName(), new FixedMetadataValue(plugin,false));                                                 	          	
                String format;
 				String Bungeeformat="";
 				PluginManager pluginManager = plugin.getServer().getPluginManager();
 				String town = "";
    			String nation = "";
    			String ttitle = "";
    			String ftitle = "";
    			String faction = "";
    			String ptown = "";
    			String pnation = "";
    			String prefix = cc.FormatStringAll(MineverseChat.chat.getPlayerPrefix(player));
    			String suffix = cc.FormatStringAll(MineverseChat.chat.getPlayerSuffix(player));
    			String group = MineverseChat.chat.getPrimaryGroup(player);   
            	if(pluginManager.isPluginEnabled("Towny")) {
            		try {
						Resident r = TownyUniverse.getDataSource().getResident(player.getName());
						if(r.hasTown()) {
							town = r.getTown().getName();
							ptown = ChatColor.WHITE + "[" + ChatColor.DARK_AQUA + r.getTown().getName() + ChatColor.WHITE + "]";
						}
						if(r.hasNation()) {
							nation = r.getTown().getNation().getName();
							pnation = ChatColor.WHITE + "[" + ChatColor.GOLD + r.getTown().getNation().getName() + ChatColor.WHITE + "]";
						}	
						if(r.isMayor() || r.isKing()) {
							ttitle = r.getFormattedName().replace(" " + player.getName(), "");    							
						}
						else {
							ttitle = r.getTitle();    							
						}
					} 
        			catch(Exception ex) {
						ex.printStackTrace();
					}  
            	}  
            	if(pluginManager.isPluginEnabled("Factions")) {
            		try {
            			UPlayer uplayer = UPlayer.get(player);
            			if(uplayer.hasFaction()) {               				
            				faction = uplayer.getFaction().getName();   
            			}
            			if(uplayer.hasTitle()) {               				
            				ftitle = uplayer.getTitle();
            			}
					} 
        			catch(Exception ex) {
						ex.printStackTrace();
					}  
            	}  
            	if(plugin.getConfig().getConfigurationSection("channels." + ci.getName()).getString("format").equalsIgnoreCase("Default")) {
            		format = ChatColor.valueOf(ci.getColor().toUpperCase()) + "[" + ci.getName() + "] " + prefix + "%s" + ChatColor.valueOf(ci.getColor().toUpperCase()) + ":" + ChatColor.valueOf(ci.getChatColor().toUpperCase());
            		Bungeeformat = ChatColor.valueOf(ci.getColor().toUpperCase()) + player.getServer().getServerName() + " [" + ci.getName() + "] " + prefix + player.getName() + ChatColor.valueOf(ci.getColor().toUpperCase()) + ":" + ChatColor.valueOf(ci.getChatColor().toUpperCase());
            	}
            	else {
            		format = cc.FormatStringAll(plugin.getConfig().getConfigurationSection("channels." + ci.getName()).getString("format").replace("{town}", town).replace("{nation}", nation).replace("{name}", "%s").replace("{townytitle}", ttitle).replace("{prefix}", prefix).replace("{suffix}", suffix).replace("{faction}", faction).replace("{factionstitle}", ftitle).replace("{servername}", player.getServer().getServerName()).replace("{pretown}", ptown).replace("{prenation}", pnation).replace("{group}", group));
            		Bungeeformat = cc.FormatStringAll(plugin.getConfig().getConfigurationSection("channels." + ci.getName()).getString("format").replace("{town}", town).replace("{nation}", nation).replace("{name}", player.getName()).replace("{townytitle}", ttitle).replace("{prefix}", prefix).replace("{suffix}", suffix).replace("{faction}", faction).replace("{factionstitle}", ftitle).replace("{servername}", player.getServer().getServerName()).replace("{pretown}", ptown).replace("{prenation}", pnation).replace("{group}", group));                	
            		if(plugin.getConfig().getBoolean("formatcleaner", false)) {
            			format = format.replace("[]", " ");
            			Bungeeformat = Bungeeformat.replace("[]", " ");
            			format = format.replace("    ", " ").replace("   ", " ").replace("  ", " ");
            			Bungeeformat = Bungeeformat.replace("    ", " ").replace("   ", " ").replace("  ", " ");
            		}
            	}
            	player.setMetadata("format", new FixedMetadataValue(plugin, format));
     			player.setMetadata("bungeeformat", new FixedMetadataValue(plugin, Bungeeformat));
             	player.setMetadata("MineverseChat.quickchat", new FixedMetadataValue(plugin, true));
             	String msg = "";
    			for(int x = 0; x < args.length; x++) {
                	 if(args[x].length() > 0) msg += " " + args[x];
                }
                player.chat(msg);	              
                return true;
        	}           	
        }
        switch(comm) {
            case "join":
            case "channel": {
                if(args.length > 0) {
                	ChatChannel chname;
                	chname = cc.getChannelInfo(args[0]);
                	
                	if(chname == null) {
                		 player.sendMessage(ChatColor.RED + "Invalid channel: "+args[0]);
                		 return true;
                	}
                	               	
                    if(chname.hasPermission()) {
                        if(!player.isPermissionSet(chname.getPermission())) {                           
                            player.setMetadata("listenchannel." + chname.getName(), new FixedMetadataValue(plugin, false));
                            player.sendMessage(ChatColor.RED + "You do not have permission for this channel.");
                            return true;
                        }
                    }

                    if(plugin.getMetadataString(player, "insertchannel", plugin).equalsIgnoreCase("NONE")) {
                        player.setMetadata("currentchannel", new FixedMetadataValue(plugin, chname.getName()));
                    }

                    String tellchat = plugin.getMetadataString(player, "MineverseChat.tell", plugin);
                    if(tellchat.length() > 0) {
                        player.setMetadata("MineverseChat.tell", new FixedMetadataValue(plugin, ""));
                        Player pl[] = plugin.getServer().getOnlinePlayers();
						for(Player sp : pl) {
							if(plugin.getMetadata(sp,"MineverseChat.spy", plugin) == true) {         					
								sp.sendMessage(player.getDisplayName() + " is no longer in a private conversation with " + tellchat + ".");
							}							
						}
                        player.sendMessage("You are no longer in private conversation with " + tellchat);
                    }

                    player.setMetadata("listenchannel." + chname.getName(), new FixedMetadataValue(plugin, true));
                    String joinformat = ChatColor.valueOf(chname.getColor().toUpperCase()) + "[" + chname.getName() + "] " + ChatColor.valueOf(chname.getChatColor().toUpperCase());               	
                    player.sendMessage("Channel Set: " + joinformat);
                    return true;
                }  
                player.sendMessage(ChatColor.RED + "Invalid command: /channel [channel]");
                return true;
            }            
            
            case "commandblock": {
            	if(player.hasPermission("mineversechat.commandblock")) {
            		if(args.length > 1) {
            			Player targetPlayer=plugin.getServer().getPlayer(args[0]);
            			if(targetPlayer==null) {
            				player.sendMessage(ChatColor.RED+"Player: "+ChatColor.GOLD+args[0]+ChatColor.RED+" is not online.");
            				return true;
            			}
            			boolean match=false;         			
            			for(String cb:(List<String>)plugin.getConfig().getList("blockablecommands")) {
            				if(args[1].equals("/"+cb)) match=true;
            			}
            			if(match || plugin.getMetadata(targetPlayer,"MineverseChat.commandblock."+args[1],plugin)) {
            				if(!plugin.getMetadata(targetPlayer,"MineverseChat.commandblock."+args[1],plugin)) {
            					targetPlayer.setMetadata("MineverseChat.commandblock."+args[1],new FixedMetadataValue(plugin,true));
            					targetPlayer.sendMessage(ChatColor.RED+"You have been blocked from entering command "+args[1]+".");
            					player.sendMessage(ChatColor.RED+"Blocked player "+ChatColor.GOLD+targetPlayer.getName()+ChatColor.RED+" from entering command "+args[1]+".");
            					return true;
            				}
            				targetPlayer.setMetadata("MineverseChat.commandblock."+args[1],new FixedMetadataValue(plugin,false));
        					targetPlayer.sendMessage(ChatColor.RED+"You have been unblocked from entering command "+args[1]+".");
        					player.sendMessage(ChatColor.RED+"Unblocked player "+ChatColor.GOLD+targetPlayer.getName()+ChatColor.RED+" from entering command "+args[1]+".");
        					return true;
            			}
            			player.sendMessage(ChatColor.RED+"Invalid command or the command is not blockable.");
            			return true;
            		}
            		player.sendMessage(ChatColor.RED+"Invalid command: /commandblock [player] [command]");
            		return true;
            	}
            	player.sendMessage(ChatColor.RED+"You do not have permission for this command.");
            	return true;
            }
            
            case "me": {
            	if(player.hasPermission("mineversechat.me")) {
            		if(args.length > 0) {
            			String msg = "";
            			for(int x = 0; x < args.length; x++) {
                        	 if(args[x].length() > 0) msg += " " + args[x];
                        }
            			if(player.isPermissionSet("mineversechat.color")) {
 		                    msg = cc.FormatStringColor(msg);
						}
            			if(player.isPermissionSet("mineversechat.format")) {
 		                    msg = cc.FormatString(msg);
						}
            			String filtered = cc.FilterChat(msg); 
            			if(plugin.getMetadata(player, "MineverseChat.filter", plugin)) {
            				plugin.getServer().broadcastMessage("* " + player.getDisplayName() + filtered);
            				return true;
            			}
            			else {
            				plugin.getServer().broadcastMessage("* " + player.getDisplayName() + msg);
            				return true;
            			}
            		}
            		else {
            			player.sendMessage(ChatColor.RED + "Invalid command: /me [msg]");
            		}
            		return true;
            	}
            	else {
            		player.sendMessage(ChatColor.RED + "You do not have permission for this command.");
            	}
            	return true;
            }
            
            case "filter": {           	
            	if(player.hasPermission("mineversechat.ignorefilter")) {
            		if(!plugin.getMetadata(player, "MineverseChat.filter", plugin)) {
            			player.setMetadata("MineverseChat.filter", new FixedMetadataValue(plugin,true));
            			player.sendMessage(ChatColor.GOLD + "You are no longer ignoring the filter.");
            			return true;
            		}
            		else {
            			player.setMetadata("MineverseChat.filter", new FixedMetadataValue(plugin,false));
            			player.sendMessage(ChatColor.GOLD + "You are now ignoring the filter.");
            			return true;
            		}
            	}   
            	else {
            		player.sendMessage(ChatColor.RED + "You do not have permission for this command.");
            	}
            	return true;           	           		
            }
            
            case "chatinfo": {
            	if(player.hasPermission("mineversechat.chatinfo")) {
            		String listen = "";
        			String mute = "";
        			String blockedcommands = "";
        			String tellplayer = plugin.getMetadataString(player, "MineverseChat.tell", plugin);
        			Player tp = plugin.getServer().getPlayer(tellplayer);
            		if(args.length < 1) {
            			player.sendMessage(ChatColor.GOLD + "Player: " + ChatColor.GREEN + player.getDisplayName());
            			for(ChatChannel ci : cc.getChannelsInfo()) {
            				if(plugin.getMetadata(player,"listenchannel." + ci.getName(), plugin) == true) {
            					listen += ChatColor.valueOf(ci.getColor().toUpperCase()) + ci.getName() + " ";
            				}
            				if(plugin.getMetadata(player, "MineverseMute." + ci.getName(), plugin) == true) {
            					mute += ChatColor.valueOf(ci.getColor().toUpperCase()) + ci.getName() + " ";
            				}
            			}
            			for(String bc : (List<String>) plugin.getConfig().getList("blockablecommands")) {
            				if(plugin.getMetadata(player, "MineverseChat.commandblock./"+bc, plugin)) {
            					blockedcommands += bc + " ";
            				}
            			}
            			player.sendMessage(ChatColor.GOLD + "Listening: " + listen);
            			if(mute.length() > 0) {
            				player.sendMessage(ChatColor.GOLD + "Mutes: " + mute);  
            			}
            			else {
            				player.sendMessage(ChatColor.GOLD + "Mutes: " + ChatColor.RED + "N/A");
            			}
            			if(blockedcommands.length() > 0) {
            				player.sendMessage(ChatColor.GOLD + "Blocked Commands: " + ChatColor.RED + blockedcommands);
            			}
            			else {
            				player.sendMessage(ChatColor.GOLD + "Blocked Commands: " + ChatColor.RED + "N/A");
            			}
            			if(tellplayer.length() > 0) {
            				player.sendMessage(ChatColor.GOLD + "Private conversation: " + ChatColor.GREEN + tp.getDisplayName());
            			}
            			else {
            				player.sendMessage(ChatColor.GOLD + "Private conversation: " + ChatColor.RED + "N/A");
            			}
            			if(plugin.getMetadata(player, "MineverseChat.afk", plugin) == true) {
            				player.sendMessage(ChatColor.GOLD + "AFK: " + ChatColor.GREEN + "true");
            			}
            			else {
            				player.sendMessage(ChatColor.GOLD + "AFK: " + ChatColor.RED + "false");
            			}
            			if(plugin.getMetadata(player, "MineverseChat.spy", plugin) == true) {
            				player.sendMessage(ChatColor.GOLD + "Spy: " + ChatColor.GREEN + "true");
            			}
            			else {
            				player.sendMessage(ChatColor.GOLD + "Spy: " + ChatColor.RED + "false");
            			}
            			if(plugin.getMetadata(player, "MineverseChat.commandspy", plugin) == true) {
            				player.sendMessage(ChatColor.GOLD + "Command spy: " + ChatColor.GREEN + "true");
            			}
            			else {
            				player.sendMessage(ChatColor.GOLD + "Command spy: " + ChatColor.RED + "false");
            			}
            			if(plugin.getMetadata(player, "MineverseChat.filter", plugin) == true) {
            				player.sendMessage(ChatColor.GOLD + "Filter: " + ChatColor.GREEN + "true");
            			}
            			else {
            				player.sendMessage(ChatColor.GOLD + "Filter: " + ChatColor.RED + "false");
            			}
            			return true;
            		}           		
            		if(args.length > 0) {
            			if(player.hasPermission("mineversechat.chatinfo.others")) {
            				Player targetPlayer = player.getServer().getPlayer(args[0]);
            				if(targetPlayer == null) {
            					if(!(player == null)) {
            						player.sendMessage(ChatColor.RED + "Player: " + ChatColor.GOLD + args[0] + ChatColor.RED + " is not online.");
            					}
            					return true;
            				}
            				else {
            					player.sendMessage(ChatColor.GOLD + "Player: " + ChatColor.GREEN + targetPlayer.getDisplayName());
            					for(ChatChannel ci : cc.getChannelsInfo()) {
            						if(plugin.getMetadata(targetPlayer,"listenchannel." + ci.getName(), plugin) == true) {
            							listen += ChatColor.valueOf(ci.getColor().toUpperCase()) + ci.getName() + " ";
            						}
            						if(plugin.getMetadata(targetPlayer, "MineverseMute." + ci.getName(), plugin) == true) {
            							mute += ChatColor.valueOf(ci.getColor().toUpperCase()) + ci.getName() + " ";
            						}
            					}
            					for(String bc : (List<String>) plugin.getConfig().getList("blockablecommands")) {
                    				if(plugin.getMetadata(targetPlayer, "MineverseChat.commandblock./"+bc, plugin)) {
                    					blockedcommands += bc + " ";
                    				}
                    			}
            					player.sendMessage(ChatColor.GOLD + "Listening: " + listen);
            					if(mute.length() > 0) {
            						player.sendMessage(ChatColor.GOLD + "Mutes: " + mute);  
            					}
            					else {
            						player.sendMessage(ChatColor.GOLD + "Mutes: " + ChatColor.RED + "N/A");
            					}
            					if(blockedcommands.length() > 0) {
                    				player.sendMessage(ChatColor.GOLD + "Blocked Commands: " + ChatColor.RED + blockedcommands);
                    			}
                    			else {
                    				player.sendMessage(ChatColor.GOLD + "Blocked Commands: " + ChatColor.RED + "N/A");
                    			}
            					String telltargetPlayer = plugin.getMetadataString(targetPlayer, "MineverseChat.tell", plugin);
            					Player ttp = plugin.getServer().getPlayer(telltargetPlayer);
            					if(telltargetPlayer.length() > 0) {
            						player.sendMessage(ChatColor.GOLD + "Private conversation: " + ChatColor.GREEN + ttp.getDisplayName());
            					}
            					else {
            						player.sendMessage(ChatColor.GOLD + "Private conversation: " + ChatColor.RED + "N/A");
            					}
            					if(plugin.getMetadata(targetPlayer, "MineverseChat.afk", plugin) == true) {
            						player.sendMessage(ChatColor.GOLD + "AFK: " + ChatColor.GREEN + "true");
            					}
            					else {
            						player.sendMessage(ChatColor.GOLD + "AFK: " + ChatColor.RED + "false");
            					}
            					if(plugin.getMetadata(targetPlayer, "MineverseChat.spy", plugin) == true) {
            						player.sendMessage(ChatColor.GOLD + "Spy: " + ChatColor.GREEN + "true");
            					}
            					else {
            						player.sendMessage(ChatColor.GOLD + "Spy: " + ChatColor.RED + "false");
            					}
            					if(plugin.getMetadata(targetPlayer, "MineverseChat.commandspy", plugin) == true) {
            						player.sendMessage(ChatColor.GOLD + "Command spy: " + ChatColor.GREEN + "true");
            					}
            					else {
            						player.sendMessage(ChatColor.GOLD + "Command spy: " + ChatColor.RED + "false");
            					}
            					if(plugin.getMetadata(targetPlayer, "MineverseChat.filter", plugin) == true) {
            						player.sendMessage(ChatColor.GOLD + "Filter: " + ChatColor.GREEN + "true");
            					}
            					else {
            						player.sendMessage(ChatColor.GOLD + "Filter: " + ChatColor.RED + "false");
            					}
            					return true;
            				}
            			}
            			else {
            				player.sendMessage(ChatColor.RED + "You do not have permission to check the chat info of others.");
            			}
            		}
            		return true;
            	}
            	else {
            		player.sendMessage(ChatColor.RED + "You do not have permission for this command.");
            		return true;
            	}
            }
            
            case "broadcast": {
            	if(sender instanceof Player) {
            		if(cc.broadcastPermissions.equalsIgnoreCase("none") || player.hasPermission(cc.broadcastPermissions)) {
            			if(args.length > 0) {
            				String bc = "";
            				for(int x = 0; x < args.length; x++) {
            					if(args[x].length() > 0) bc += args[x] + " ";
            				}
            				bc = cc.FormatString(bc);
            				bc = cc.FormatStringColor(bc);
            				plugin.getServer().broadcastMessage(cc.broadcastDisplayTag + ChatColor.valueOf(cc.broadcastColor.toUpperCase()) + " " + bc);
            				return true;
            			}
            			else {
            				player.sendMessage(ChatColor.RED + "Invalid command: /broadcast [msg]");
            				return true;
            			}
            		}
            		else {
            			player.sendMessage(ChatColor.RED + "You do not have permission for this command.");
            			return true;
            		}
            	}
            	else {
            		if(args.length > 0) {
        				String bc = "";
        				for(int x = 0; x < args.length; x++) {
        					if(args[x].length() > 0) bc += args[x] + " ";
        				}
        				bc = cc.FormatString(bc);
        				bc = cc.FormatStringColor(bc);
        				plugin.getServer().broadcastMessage(cc.broadcastDisplayTag + ChatColor.valueOf(cc.broadcastColor.toUpperCase()) + " " + bc);
        				return true;
        			}
            		else {
        				System.out.println("Invalid command: broadcast [msg]");
        				return true;
        			}
            	}
            }
            
            case "mineversechat": {           	      		
            	player.sendMessage(ChatColor.GOLD + "MineverseChat Version: 1.5.1");
            	player.sendMessage(ChatColor.GOLD + "Written by Aust1n46");
            	return true;         	
            }
            
            case "channelinfo": {
            	if(player.hasPermission("mineversechat.channelinfo")) {
            		if(args.length < 1) {
            			player.sendMessage(ChatColor.RED + "Invalid command: /channelinfo [channel]");
            			return true;
            		}
        			ChatChannel chname = cc.getChannelInfo(args[0]);
        			if(chname == null) {
						 player.sendMessage(ChatColor.RED + "Invalid channel: " + args[0]);
						 return true;
					}
        			if(chname.hasPermission()) {
						 if(!player.isPermissionSet(chname.getPermission())) {					 		
						 	player.sendMessage(ChatColor.RED + "You do not have permission to look at this channel.");
						 	return true;
						 }
        			}
        			player.sendMessage(ChatColor.GOLD + "Channel: " + ChatColor.valueOf(chname.getColor().toUpperCase()) + chname.getName());
			 		player.sendMessage(ChatColor.GOLD + "Alias: " + ChatColor.valueOf(chname.getColor().toUpperCase()) + chname.getAlias());
			 		player.sendMessage(ChatColor.GOLD + "Color: " + ChatColor.valueOf(chname.getColor().toUpperCase()) + chname.getColor());
			 		player.sendMessage(ChatColor.GOLD + "ChatColor: " + ChatColor.valueOf(chname.getChatColor().toUpperCase()) + chname.getChatColor());
			 		player.sendMessage(ChatColor.GOLD + "Permission: " + ChatColor.valueOf(chname.getColor().toUpperCase()) + chname.getPermission());
			 		player.sendMessage(ChatColor.GOLD + "Autojoin: " + ChatColor.valueOf(chname.getColor().toUpperCase()) + chname.getAutojoin());
			 		player.sendMessage(ChatColor.GOLD + "Default: " + ChatColor.valueOf(chname.getColor().toUpperCase()) + chname.isDistance());
			 		if(!chname.isDistance() || chname.getBungee()) {
			 			player.sendMessage(ChatColor.GOLD + "Distance: " + ChatColor.RED + "N/A");
			 		}
			 		else {
			 			player.sendMessage(ChatColor.GOLD + "Distance: " + ChatColor.valueOf(chname.getColor().toUpperCase()) + chname.getDistance().toString());
			 		}
			 		if(!chname.isCooldown()) {
			 			player.sendMessage(ChatColor.GOLD + "Cooldown: " + ChatColor.RED + "N/A");
			 		}
			 		else {
			 			player.sendMessage(ChatColor.GOLD + "Cooldown: " + ChatColor.valueOf(chname.getColor().toUpperCase()) + chname.getCooldown());
			 		}
			 		player.sendMessage(ChatColor.GOLD + "Bungeecord: " + ChatColor.valueOf(chname.getColor().toUpperCase()) + chname.getBungee().toString());			 		
			 		player.sendMessage(ChatColor.GOLD + "Format: " + ChatColor.valueOf(chname.getColor().toUpperCase()) + chname.getFormat());		 			
			 		return true;
            	}
            	else {
            		player.sendMessage(ChatColor.RED + "You do not have permission for this command.");
            		return true;
            	}
            }
            
            case "commandspy": {
            	if(player.hasPermission("mineversechat.commandspy")) {
            		if(plugin.getMetadata(player, "MineverseChat.commandspy", plugin) != true) {
            			if(plugin.getMetadata(player, "MineverseChat.spy", plugin) == true) {
            				player.setMetadata("MineverseChat.spy", new FixedMetadataValue(plugin,false));
            				player.sendMessage(ChatColor.GOLD + "You are no longer spying on tells.\nTo avoid double sending with command spy.");
            			}
            			player.setMetadata("MineverseChat.commandspy", new FixedMetadataValue(plugin,true));
            			player.sendMessage(ChatColor.GOLD + "You are now spying on commands.");
            			return true;
            		}
            		else {
            			player.setMetadata("MineverseChat.commandspy", new FixedMetadataValue(plugin,false));
    					player.sendMessage(ChatColor.GOLD + "You are no longer spying on commands.");
    					return true;
            		}
            	}           	
            }
            
            case "chatreload": {            	
            	if(player.hasPermission("mineversechat.reload")) {  
            		plugin.reloadConfig();
            		Bukkit.getPluginManager().disablePlugin(plugin);
            		Bukkit.getPluginManager().enablePlugin(plugin);
            		plugin.getServer().getLogger().info("[" + plugin.getConfig().getString("pluginname", "MineverseChat") + "] Config reloaded");
            		Player pl[] = plugin.getServer().getOnlinePlayers();
            		for(Player p : pl) {
            			if(p.hasPermission("mineversechat.reload")) {
            				p.sendMessage(ChatColor.GOLD + plugin.getConfig().getString("pluginname", "MineverseChat") + " config reloaded.");
            			}
            		}        				
            		return true;
            	}
        		player.sendMessage(ChatColor.RED + "You do not have permission for this command.");
        		return true;
            }
            
            case "listen": {
            	if (args.length > 0) {
            		ChatChannel chname;
            		chname = cc.getChannelInfo(args[0]);
            		
            		if(chname == null) {
                		 player.sendMessage(ChatColor.RED + "Invalid channel: " + args[0]);
                		 return true;
                	}
            		
            		if(chname.hasPermission()) {
                        if(!player.isPermissionSet(chname.getPermission())) {
                            player.setMetadata("listenchannel." + chname.getName(), new FixedMetadataValue(plugin, false));                         
                            player.sendMessage(ChatColor.RED + "You do not have permission for this channel.");
                            return true;
                        }
                    }
            		
            		String format = ChatColor.valueOf(chname.getColor().toUpperCase()) + "[" + chname.getName() + "] " + ChatColor.valueOf(chname.getChatColor().toUpperCase());
					player.setMetadata("format", new FixedMetadataValue(plugin, format));            	                 		                 		
					player.setMetadata("listenchannel." + chname.getName(), new FixedMetadataValue(plugin, true));                    	         					
					player.sendMessage("Listening to Channel: " + format);
            	}
            	else {
            		player.sendMessage(ChatColor.RED + "Invalid command: /listen [channel]");
            	}
            	return true;
            }           
            
            case "force": {
            	if(player.isPermissionSet("mineversechat.force")) {
            		if (args.length < 2) {
            			player.sendMessage(ChatColor.RED + "Invalid command: /force [player] [msg]");
            			return true;
            		}           		
            		if(args.length > 0) {
            			Player targetPlayer = player.getServer().getPlayer(args[0]);
            			if(targetPlayer == null) {
            				if(!(player == null)) {
            					player.sendMessage(ChatColor.RED + "Player: " + ChatColor.GOLD + args[0] +ChatColor.RED + " is not online.");
            				}
            				return true;
            			}	
            			String forcemsg = "";
            			for(int x = 1; x < args.length; x++) {                   
                        	 if(args[x].length() > 0) forcemsg += args[x] + " ";
                        }
                        player.sendMessage(ChatColor.GOLD + "Forcing player " + ChatColor.RED + targetPlayer.getDisplayName() + ChatColor.GOLD + " to run: " + ChatColor.RED + forcemsg);
            			targetPlayer.chat(forcemsg);
                        return true;
            		}
            	}
            	else {
            		player.sendMessage(ChatColor.RED + "You do not have permission for this command.");
            	}
            	return true;
            }   
            
            case "forceall": {
            	if(player.isPermissionSet("mineversechat.forceall")) {
            		if (args.length < 1) {
            			player.sendMessage(ChatColor.RED + "Invalid command: /forceall [msg]");
            			return true;
            		}
            		
            		if(args[0].length() > 0) {
            			Player pl[] = plugin.getServer().getOnlinePlayers();
            			String forcemsg = "";
            			for(int x = 0; x < args.length; x++) {
                        	 if (args[x].length() > 0) forcemsg += args[x] + " ";
                        }
            			player.sendMessage(ChatColor.GOLD + "Forcing all players to run: " + ChatColor.RED + forcemsg);
            			for(Player p : pl) {
            				p.chat(forcemsg);
            			}
            			return true;
            		}
            	}
            	else {
            		player.sendMessage(ChatColor.RED + "You do not have permission for this command.");
            	}
            	return true;
            }
            
            case "setchannel": {
            	if(player.isPermissionSet("mineversechat.setchannel")) {
            		if(args.length < 2) {          			
            			player.sendMessage(ChatColor.RED + "Invalid command: /setchannel [player] [channelname]");
            			return true;
            		}
            		if(args[0].length() > 1) {
            			ChatChannel chname;
            			chname = cc.getChannelInfo(args[1]);           			  
            			Player targetPlayer = player.getServer().getPlayer(args[0]);
            			if(targetPlayer == null) {
   						 	if(player!=null) {
   						 		player.sendMessage(ChatColor.RED + "Player: " + ChatColor.GOLD + args[0] + ChatColor.RED + " is not online.");
   						 	}
   						 	return true;
   					 	} 		 				 	
   						if(chname == null) {
   						 	player.sendMessage(ChatColor.RED + "Invalid channel: " + args[1]);
   						 	return true;
   						}
   						if(chname.hasPermission()) {
   						 	if(!targetPlayer.isPermissionSet(chname.getPermission())) {
   						 		targetPlayer.setMetadata("listenchannel." + chname.getName(), new FixedMetadataValue(plugin, false));
   						 		player.sendMessage(ChatColor.RED + "This player does not have permission for channel: " + ChatColor.valueOf(chname.getColor().toUpperCase()) + chname.getName());
   						 		return true;
   						 	}
   						} 						
   						if(plugin.getMetadataString(player, "insertchannel", plugin).equalsIgnoreCase("NONE")) {					 	
   						 	targetPlayer.setMetadata("currentchannel", new FixedMetadataValue(plugin, chname.getName()));
   						 	player.sendMessage(ChatColor.GOLD + "Set player " + ChatColor.RED + args[0] + ChatColor.GOLD + " into channel: " + ChatColor.valueOf(chname.getColor().toUpperCase()) + chname.getName());
   						}
   						String tellchat = plugin.getMetadataString(player, "MineverseChat.tell", plugin);
   						if(tellchat.length() > 0) {
   						 	targetPlayer.setMetadata("MineverseChat.tell", new FixedMetadataValue(plugin, ""));
   						 	Player pl[] = plugin.getServer().getOnlinePlayers();
   						 	for(Player sp : pl) {
   						 		if(plugin.getMetadata(sp,"MineverseChat.spy", plugin) == true) {         					
   						 			sp.sendMessage(player.getDisplayName() + " is no longer in a private conversation with " + tellchat + ".");
   						 		}							
   						 	}
   						 	targetPlayer.sendMessage("You are no longer in private conversation with " + tellchat + ".");
   						}
					    String format = ChatColor.valueOf(chname.getColor().toUpperCase()) + "[" + chname.getName() + "] " + ChatColor.valueOf(chname.getChatColor().toUpperCase());
   						targetPlayer.setMetadata("format", new FixedMetadataValue(plugin, format));            	                 		                 		
   						targetPlayer.setMetadata("listenchannel." + chname.getName(), new FixedMetadataValue(plugin, true));                    	         					
   						targetPlayer.sendMessage("Channel Set: " + format);
   						return true;					 					
   					}
            	}
            	else {
            		player.sendMessage(ChatColor.RED + "You do not have permission for this command.");
            	}
            	return true;
            }
            
            case "kickchannel": {
            	if(player.isPermissionSet("mineversechat.kickchannel")) {
            		if(args.length < 2) {          			
            			player.sendMessage(ChatColor.RED + "Invalid command: /kickchannel [player] [channelname]");
            			return true;
            		}
            		if(args[0].length() > 1) {
            			int listenchannelcount = 0;
            			ChatChannel chname;
            			chname = cc.getChannelInfo(args[1]);           			  
            			Player targetPlayer = player.getServer().getPlayer(args[0]);
            			if(targetPlayer == null) {
   						 	if(player!=null) {
   						 	player.sendMessage(ChatColor.RED + "Player: " + ChatColor.GOLD + args[0] + ChatColor.RED + " is not online.");
   						 	}
   						 	return true;
   					 	} 		 
   						 	
   						if(chname == null) {
   							player.sendMessage(ChatColor.RED + "Invalid channel: " + args[1]);
   						 	return true;
   						}  						
   						if(plugin.getMetadataString(player, "insertchannel", plugin).equalsIgnoreCase("NONE")) { 						 	
   						 	player.sendMessage(ChatColor.GOLD + "Kicked player " + ChatColor.RED + args[0] + ChatColor.GOLD + " from channel: " + ChatColor.valueOf(chname.getColor().toUpperCase()) + chname.getName());
   						}			
   						String format = ChatColor.valueOf(chname.getColor().toUpperCase()) + "[" + chname.getName() + "] " + ChatColor.valueOf(chname.getChatColor().toUpperCase());
   						targetPlayer.setMetadata("format", new FixedMetadataValue(plugin, format));            	                 		                 		
   						targetPlayer.setMetadata("listenchannel." + chname.getName(), new FixedMetadataValue(plugin, false));                    	            						
   						targetPlayer.sendMessage("Leaving Channel: " + format);
   						for(ChatChannel channel : cc.getChannelsInfo()) {
            				if(plugin.getMetadata(targetPlayer, "listenchannel." + channel.getName(), plugin)) {
                                listenchannelcount++;
                            }
            			}
   						if(listenchannelcount == 0) {
   							targetPlayer.setMetadata("listenchannel." + cc.defaultChannel, new FixedMetadataValue(plugin, true));
   							targetPlayer.sendMessage(ChatColor.RED + "You need to be listening on at least one channel, setting you into the default channel.");
   							targetPlayer.sendMessage("Channel Set: " + ChatColor.valueOf(cc.defaultColor.toUpperCase()) + "[" + cc.defaultChannel + "]");                 	
   						}
   						return true;  						  					
   					}
            	}
            	else {
            		player.sendMessage(ChatColor.RED + "You do not have permission for this command.");
            	}
            	return true;
            }
            
            case "setchannelall": {
            	if(player.isPermissionSet("mineversechat.setchannelall")) {
            		if(args.length < 1) {          			
            			player.sendMessage(ChatColor.RED + "Invalid command: /setchannelall [player]");
            			return true;
            		}        		          			  
            		Player targetPlayer = player.getServer().getPlayer(args[0]);
            		if(targetPlayer == null) { 			
   						if(player!=null) {
   							player.sendMessage(ChatColor.RED + "Player: " + ChatColor.GOLD + args[0] + ChatColor.RED + " is not online.");
   						}
   						return true;
   					}
            		for(ChatChannel ci : cc.getChannelsInfo()) {
            			if(ci.hasPermission()) {
            				if(!targetPlayer.isPermissionSet(ci.getPermission())) {          					
            					targetPlayer.setMetadata("listenchannel." + ci.getName(), new FixedMetadataValue(plugin, false));
            				}
            				else {
            					targetPlayer.setMetadata("listenchannel." + ci.getName(), new FixedMetadataValue(plugin, true));
            				}          				
            			}
            			else {
            				targetPlayer.setMetadata("listenchannel." + ci.getName(), new FixedMetadataValue(plugin, true));           				
            			}           			
					}               		
        			player.sendMessage(ChatColor.GOLD + "Set player " + ChatColor.RED + args[0] + ChatColor.GOLD + " into all channels.");                   		
        			targetPlayer.sendMessage(ChatColor.RED + "You have been set into all channels.");
        			return true;
            	}  		
            	else {
            		player.sendMessage(ChatColor.RED + "You do not have permission for this command.");
            	}
            	return true;
            }
            
            case "kickchannelall": {
            	if(player.isPermissionSet("mineversechat.kickchannelall")) {
            		if(args.length < 1) {         			
            			player.sendMessage(ChatColor.RED + "Invalid command: /kickchannelall [player]");
            			return true;
            		}        		          			  
            		Player targetPlayer = player.getServer().getPlayer(args[0]);
            		if(targetPlayer == null) {  			
   						if(player!=null) {
   							player.sendMessage(ChatColor.RED + "Player: " + ChatColor.GOLD + args[0] + ChatColor.RED + " is not online.");
   						}
   						return true;
   					} 		 															 		 													           	                 		                 		
            		for(ChatChannel ci : cc.getChannelsInfo()) {
            			targetPlayer.setMetadata("listenchannel." + ci.getName(), new FixedMetadataValue(plugin, false));                    	          						  					
            		}
            		player.sendMessage(ChatColor.GOLD + "Kicked player " + ChatColor.RED + args[0] + ChatColor.GOLD + " from all channels.");
            		targetPlayer.sendMessage(ChatColor.RED + "You have been kicked from all channels.");
            		targetPlayer.setMetadata("listenchannel." + cc.defaultChannel, new FixedMetadataValue(plugin, true));
                	targetPlayer.sendMessage(ChatColor.RED + "You need to be listening on at least one channel, setting you into the default channel.");
                	targetPlayer.sendMessage("Channel Set: " + ChatColor.valueOf(cc.defaultColor.toUpperCase()) + "[" + cc.defaultChannel + "]");                 	
            	}
            	else {
            		player.sendMessage(ChatColor.RED + "You do not have permission for this command.");
            	}
            	return true;
            }
           
            case "leave": {
                int listenchannelcount = 0;
                boolean left = false;
                if(args.length > 0) {
                    for(ChatChannel chname : cc.getChannelsInfo()) {
                        if(chname.getName().equalsIgnoreCase(args[0]) || chname.getAlias().equalsIgnoreCase(args[0])) {                      	                       		
                        	player.setMetadata("listenchannel." + chname.getName(), new FixedMetadataValue(plugin, false));
                        	String format = ChatColor.valueOf(chname.getColor().toUpperCase()) + "[" + chname.getName() + "]";
                        	player.sendMessage("Leaving channel: " + format);       
                        	left = true;
                        }
                        if(plugin.getMetadata(player, "listenchannel." + chname.getName(), plugin)) {
                            listenchannelcount++;
                        }
                    }             
                    if(listenchannelcount == 0) {
                    	player.setMetadata("listenchannel." + cc.defaultChannel, new FixedMetadataValue(plugin, true));
                    	player.sendMessage(ChatColor.RED + "You need to be listening on at least one channel, setting you into the default channel.");
                    	player.sendMessage("Channel Set: " + ChatColor.valueOf(cc.defaultColor.toUpperCase()) + "[" + cc.defaultChannel + "]");                 	
                    }
                    if(!left) {
                    	player.sendMessage(ChatColor.RED+"Invalid channel: " + args[0]);
                    }
                    return true;
                } 
                else {
                    player.sendMessage(ChatColor.RED+"Invalid command: /leave [channelname]");
                    return true;
                }
            }

            case "chlist": {
                player.sendMessage(ChatColor.GOLD + "Channel List : Alias");
                for(ChatChannel chname : cc.getChannelsInfo()) {
                    if(chname.hasPermission()) {
                        if(player.isPermissionSet(chname.getPermission())) {
                            player.sendMessage(ChatColor.valueOf(chname.getColor().toUpperCase()) + chname.getName() + " : " + chname.getAlias() + " - Permission Required");
                        }
                    } 
                    else {
                        player.sendMessage(ChatColor.valueOf(chname.getColor().toUpperCase()) + chname.getName() + " : " + chname.getAlias());
                    }
                }
                return true;
            }

            case "chwho": {
                String listen = "listenchannel.";
                String playerlist = "";
                if(player.hasPermission("mineversechat.chwho")) {
                	if(args.length > 0) {
                		ChatChannel cinfo = cc.getChannelInfo(args[0]);
                		if(cinfo != null) {
                			if(cinfo.hasPermission()) {
                				if(!player.isPermissionSet(cinfo.getPermission())) {               					
                					player.setMetadata("listenchannel." + cinfo.getName(), new FixedMetadataValue(plugin, false));
                					player.sendMessage(ChatColor.RED + "You do not have permission to look at this channel.");
                					return true;
                				}
                			}
                			listen += cinfo.getName();
                			Player pl[] = plugin.getServer().getOnlinePlayers();    
                			PluginManager pluginManager = plugin.getServer().getPluginManager();
                			long linecount = plugin.getLineLength();
                			for(Player p : pl) {               				
                				if(plugin.getMetadata(p, listen, plugin)) {
                					if(cinfo.isDistance()) {
                						if(!isPlayerWithinDistance(player, p, cinfo.getDistance())) {
                							continue;
                						}
                					} 
                					if(pluginManager.isPluginEnabled("Towny")) {
                						try {       		
                							Resident r = TownyUniverse.getDataSource().getResident(p.getName());
                							Resident pp = TownyUniverse.getDataSource().getResident(player.getName());    
                							if(cinfo.getName().equalsIgnoreCase("Town")) {      					       				
                								if(!pp.hasTown()) {
                									if(playerlist.length() + p.getName().length() > linecount) {                						
                                						playerlist += "\n";
                                						linecount = linecount + plugin.getLineLength();
                                					}
                                					if(!plugin.getMetadata(player, "MineverseMute." + cinfo.getName(), plugin)) {
                                						playerlist += ChatColor.WHITE + player.getName();
                                					} 
                                					else {
                                						playerlist += ChatColor.RED + player.getName();
                                					}               					
                                					playerlist += ChatColor.WHITE + ", ";
                									break;
                								}
                								else if(!r.hasTown()) {
                									continue;
                								}
                								else if(!(r.getTown().getName().equals(pp.getTown().getName()))) {
                									continue;
                								}      					
                							}	
                							if(cinfo.getName().equalsIgnoreCase("Nation")) {      					       				
                								if(!pp.hasNation()) {
                									if(playerlist.length() + p.getName().length() > linecount) {                						
                                						playerlist += "\n";
                                						linecount = linecount + plugin.getLineLength();
                                					}
                                					if(!plugin.getMetadata(player, "MineverseMute." + cinfo.getName(), plugin)) {
                                						playerlist += ChatColor.WHITE + player.getName();
                                					} 
                                					else {
                                						playerlist += ChatColor.RED + player.getName();
                                					}               					
                                					playerlist += ChatColor.WHITE + ", ";
                									break;
                								}
                								else if(!r.hasNation()) {
                									continue;
                								}
                								else if(!(r.getTown().getNation().getName().equals(pp.getTown().getNation().getName()))) {
                									continue;
                								}      					
                							}
                						} 
                						catch(Exception ex) {
                							ex.printStackTrace();
                						}   
                					}
                					if(playerlist.length() + p.getName().length() > linecount) {                						
                						playerlist += "\n";
                						linecount = linecount + plugin.getLineLength();
                					}
                					if(!plugin.getMetadata(p, "MineverseMute." + cinfo.getName(), plugin)) {
                						playerlist += ChatColor.WHITE + p.getName();
                					} 
                					else {
                						playerlist += ChatColor.RED + p.getName();
                					}               					
                					playerlist += ChatColor.WHITE + ", ";
                				}
                			}                			
                			if(playerlist.length() > 2) {
                				playerlist = playerlist.substring(0, playerlist.length() - 2);
                			}
                			player.sendMessage(ChatColor.GOLD + "Players in Channel: " + ChatColor.valueOf(cinfo.getColor().toUpperCase()) + cinfo.getName());
                			player.sendMessage(playerlist);
                			return true;
                		} 
                		else {
                			player.sendMessage(ChatColor.RED + "Invalid channel: " + args[0]);
                			return true;
                		}
                	} 
                	else {
                		player.sendMessage(ChatColor.RED + "Invalid command: /chwho [channel]");
                		return true;
                	}
                }
                else {
                	player.sendMessage(ChatColor.RED + "You do not have permission for this command.");
                	return true;
                }
            } 
        }
        return false;
    }

    Boolean isPlayerWithinDistance(Player p1, Player p2, double Distance) {
        Double chDistance = Distance;
        Location locreceip;
        Location locsender = p1.getLocation();
        Location diff;
        if(chDistance > (double) 0) {
            locreceip = p2.getLocation();
            if(locreceip.getWorld() == p1.getWorld()) {
                diff = locreceip.subtract(locsender);                
                if(Math.abs(diff.getX()) > chDistance || Math.abs(diff.getZ()) > chDistance) {
                    return false;
                }
            } 
            else { 
                return false;
            }
        }
        return true;
    }
}
